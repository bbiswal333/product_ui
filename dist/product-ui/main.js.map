{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,0BAA0B,wBAAwB,2BAA2B,qBAAqB,0BAA0B,KAAK,iBAAiB,8BAA8B,KAAK,C;;;;;;;;;;;ACArL,6YAA6Y,wQAAwQ,4HAA4H,gjB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvuB;AACG;AACR;AAOrC;IAKE,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAHtB,WAAM,GAAG,yEAAyE,CAAC;QAC3F,SAAI,GAAQ,EAAE,CAAC;QAGb,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,8BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;aAChC,IAAI,CACH,0DAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAClC,CAAC;IACJ,CAAC;IAED,kCAAW,GAAX;QAAA,iBAMC;QALC,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;YAC3B,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC;IACJ,CAAC;IAvBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAM0B,kDAAI;OALnB,YAAY,CAwBxB;IAAD,mBAAC;CAAA;AAxBwB;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACE;AAEI;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,wDAAU;aACZ;YACA,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACjBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".price {\\r\\n    font-size: 28px;\\r\\n    margin-bottom: 2px;\\r\\n    float: right;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.card-title {\\r\\n    color: cornflowerblue;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        Product Catalog\\n    </a>\\n  </nav>\\n<div class=\\\"container\\\" style=\\\"margin-top: 10px\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Product Name</h5>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Product Id</h6>\\n          <p class=\\\"card-text\\\">Product short description</p>\\n          <p class=\\\"price\\\">&euro; 956</p>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Card title</h5>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Card subtitle</h6>\\n          <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n          <a href=\\\"#\\\" class=\\\"card-link\\\">Card link</a>\\n          <a href=\\\"#\\\" class=\\\"card-link\\\">Another link</a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col\\\">col</div>\\n    <div class=\\\"col\\\">col</div>\\n  </div>\\n</div>\\n</div>\\n \\n\"","import { Component } from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n  private apiURL = 'https://product-service-cloud.herokuapp.com/product.svc/api/v1/products';\n  data: any = {};\n\n  constructor(private http: Http){\n    this.getProducts();\n    this.getData();\n  }\n\n  getData(){\n    return this.http.get(this.apiURL)\n    .pipe(\n      map((res:Response) => res.json())\n    );\n  }\n\n  getProducts(){\n    this.getData().subscribe(data => {\n      console.log('Getting all products ...')\n      console.log(data);\n      this.data = data;\n    })\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n ],\n  providers: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}